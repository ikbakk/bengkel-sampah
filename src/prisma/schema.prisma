// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID       String    @id @default(uuid())
  phoneNumber  Int       @unique
  passwordHash String
  name         String
  address      String
  role         Role      @default(CUSTOMER)
  customer     Customer?
  driver       Driver?
  email        String    @unique
  member       Member?
  transactions Transaction[]
  createdAt    DateTime      @default(now())
}

model Customer {
  customerID String @id @default(uuid())
  balance    Int
  userID     String @unique
  user       User   @relation(fields: [userID], references: [userID], onDelete: Cascade)
}

model Driver {
  driverID     String @id @default(uuid())
  driverStatus Driver_Status @default(ACTIVE)
  userID       String @unique
  user         User   @relation(fields: [userID], references: [userID], onDelete: Cascade)
}

model Partner {
  partnerID   String @id @default(uuid())
  address     String
  phoneNumber Int
  name        String
}

model Member {
  memberID    String     @id @default(uuid())
  wasteBankID String
  wasteBank   Waste_Bank @relation(fields: [wasteBankID], references: [wasteBankID], onDelete: Cascade)
  balance     Int
  userID      String     @unique
  user        User       @relation(fields: [userID], references: [userID], onDelete: Cascade)
}

model Transaction {
  transactionID   String   @id @default(uuid())
  status          Int
  source          Int
  userID          String
  user            User     @relation(fields: [userID], references: [userID], onDelete: Cascade)
  transactionDate DateTime @default(now())
}

model Waste {
  wasteID   String @id @default(uuid())
  name      String
  price     Float
  wasteType String
}

model Waste_Submission {
  wasteSubmissionID String @id @default(uuid())
  transactionID     String @unique
  wasteID           String @unique
  totalWeight       Float
  totalPrice        Float
}

model Waste_Bank {
  wasteBankID String   @id @default(uuid())
  name        String
  address     String
  members     Member[]
}

enum Role {
  ADMIN
  CUSTOMER
  MITRA
  DRIVER
}

enum Driver_Status {
  ACTIVE
  INACTIVE
}

enum Transaction_Status {
  READY
  PROCESSING
  COMPLETED
}

enum Transaction_Source {
  PARTNER
  WASTE_BANK
}